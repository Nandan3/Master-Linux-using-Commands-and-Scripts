○ Learn the Linux concepts & commands through shell script:

§ Task 2: To check disk utilization and sends alerting message

Commands used:

"grep" command:
	1. Used to search texts or pattern within the files.
	Syntax:
	$grep <options> <search text> <filename> 
	
	Eg:
		a. $grep -i "password" /etc/password.txt     #print the pattern (both upper and lower case patterns)
		-i >> case insensitive 
		
		b. $grep -r "error" /var/logs   #when you don't know which file contains the content
		-r (or --recursive) >> search recursively inside all files and subdirectories.
		
		c. $grep -A 10 "password" /etc/password.txt      #print the line, which matches the pattern & 10 lines after that
		
		d. $grep -B 10 "error" /var/logs      #print the line, which matches the pattern & 10 lines before that
		
		e. $grep -ir --color 'password' /etc/    #to color code the output
		
		f. $grep -oi 'password' /etc/ssh/sshd-config   #print only the matched part (not the whole line)
		
"awk" command:
	1. Processes files line by line and splits each line into fields (columns).
	2. You can search, filter, and format text using patterns and actions.
	Syntax:
	$awk  [options] '[selection_criteria] {action}' input-file
	
	Eg:
		a. $awk '{print $1, $3}' file.txt   #Prints column 1 and column 3 from each line.
		b. $awk '/error/ {print}' logfile.txt   #Prints only lines containing the word "error".
		c. $awk '$3 > 50 {print $1, $3}' marks.txt   #Prints name and marks for students where 3rd column > 50.
		d. $awk 'BEGIN {print "Name\tAge"} {print $1, $2} END {print "Done"}' data.txt    #Prints a header before data, and "Done" at the end.
		
	Or 
	Syntax:
	$cat input-file | awk [options] '[selection_criteria] {action}' input-file
	
	Eg:
		a. $df -h | awk '{print $5}'    #prints the content of the 5th column.
		
"cut" command:
	1. Extract the specific content or pattern in a file.
	Syntax:
	$cut -d ' ' -f 1 <file_name>   #extract the content from file
	$cut -d ',' -f 3 <file_name>   #if the content is seperated through ',' the extract like
	cut -d ',' -f 1,3 userfile.txt    #Extract multiple fields
	
	-d >> delimiter 
	-f 3 → Extracts the 3rd field from each line, based on the delimiter
	
"df" command:
	1. Show mounted file systems memory usage 
	
	Eg: $df -h   #Show mounted file systems memory usage in human readable form
	
Other commands used to check system configuration information:
	1. List the block devices and their partition with file system type
	Eg:
	$lsblk -f or
$ls -l /dev | grep "^b"
	$fdisk -l
	
	2. Real-time view of system processes, CPU, memory usage.
	$top or $htop (more user freindly)
	
	3. To check disk usage and directory size
	Eg:
	$du -sh /var/log
	
	-s >> lists the sizes of all files and directories in a given file path
	-h >> prints size outputs, in a human-readable format
	
	4. $dmsg -T         #to check system boot logs or troubleshoot hardware issues. 
	
	5. $udevadm        #Dynamic device detection & management like USB, HDD etc
	6. $lspci       #list PCI devices like network cards, graphic cards (GPU), sound cards, storage controllers, USB controllers, etc.
	


Disk-utilisation.sh:

#!/bin/bash
echo "checking disk utilization in Linux"

disk_size = `df -h | grep "/dev/mapper/centos-root" | awk '{print $5}' | cut -d '%' -f 1

if [ $disk_size -gt 80 ];
then
  echo "disk is utilised more than 80%, expand disk or delete files soon"

else
  echo "enough disk is available"
fi


		
